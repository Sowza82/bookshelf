'use client'

import React from 'react'
// ðŸ’¡ Assumindo que 'useTheme' vem de um provedor de tema
import { useTheme } from '../theme-provider'

// Interface de Propriedades
interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {
Â  variant?: 'default' | 'outline' | 'ghost' | 'destructive'
Â  size?: 'default' | 'icon' | 'sm' | 'lg'
}

export function Button({
Â  variant = 'default',
Â  size = 'default',
Â  className = '',
Â  ...props
}: ButtonProps) {
Â  // O tema nÃ£o Ã© usado diretamente, mas mantemos o hook caso seja necessÃ¡rio
Â  // para outras lÃ³gicas mais complexas no futuro.
Â  // const { theme } = useTheme()

Â  // 1. Estilos Base
Â  const baseStyle =
Â  Â  'inline-flex items-center justify-center rounded-md font-medium transition-colors duration-300 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:opacity-50 disabled:pointer-events-none'


Â  // 2. Estilos de Tamanho
Â  const sizeStyle = {
Â  Â  default: 'h-10 px-4 py-2', // PadrÃ£o Shadcn
Â  Â  icon: 'h-10 w-10 p-0', // Tamanho para Ã­cones
Â  Â  sm: 'h-9 px-3', // Tamanho pequeno
Â  Â  lg: 'h-11 px-8', // Tamanho grande
Â  }[size] || 'h-10 px-4 py-2'


Â  // 3. Estilos de Variante (Usando classes temÃ¡ticas padrÃ£o para aceitar customizaÃ§Ã£o via className)
Â  const variantStyle = {
Â  Â  // Cor primÃ¡ria sÃ³lida
Â  Â  default: 'bg-primary text-primary-foreground hover:bg-primary/90 shadow',
Â  Â 
Â  Â  // Outline: Usa cores neutras do sistema (input/background/accent).
Â  Â  // Isto Ã© essencial para que classes externas como 'border-red-500' funcionem.
Â  Â  outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',
Â  Â 
Â  Â  // Ghost: Transparente.
Â  Â  ghost: 'hover:bg-accent hover:text-accent-foreground',
Â  Â 
Â  Â  // Destructive: Fundo vermelho/destrutivo.
Â  Â  destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90 shadow-sm',
Â  }[variant]

Â  return (
Â  Â  <button
Â  Â  Â  className={`${baseStyle} ${sizeStyle} ${variantStyle} ${className}`}
Â  Â  Â  {...props}
Â  Â  />
Â  )
}
